import random
import numpy as np

n = int(input("Введите размер квадратной матрицы: "))
M = np.array([[random.uniform(-5, 9) for j in range(n)] for i in range(n)]) # генерация матрицы
print("Исходная матрица M:")
print(M)

M = np.round(M, 2) # округление элементов матрицы до сотых

M_pos = M[M > 0] # выбор положительных элементов матрицы
if M_pos.size > 0:
    geo_mean = np.prod(M_pos) ** (1/M_pos.size) # вычисление среднего геометрического
    print("Среднее геометрическое положительных элементов:", geo_mean)
else:
    print("В матрице нет положительных элементов.")

M_sorted = M[:, 2].copy() # сортировка третьего столбца матрицы
M_sorted.sort()
M1 = np.diag(M_sorted) # создание диагональной матрицы на основе отсортированного столбца

det_M1 = round(np.linalg.det(M1), 2) # вычисление определителя новой матрицы
M1[M1 == 0] = det_M1 # замена нулевых элементов на определитель

cos_M1 = np.cos(M1) # вычисление косинуса каждого элемента M1
M[:, 1][M[:, 1] > 0] = det_M1 # замена положительных элементов второго столбца на определитель

print("Итоговая матрица M:")
print(M)
print("Матрица M1:")
print(M1)
print("Косинус каждого элемента матрицы M1:")
print(cos_M1)